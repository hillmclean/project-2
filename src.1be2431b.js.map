{"version":3,"sources":["src/settings.js","src/partials/Board.js","src/partials/Paddle.js","src/partials/Ball.js","src/partials/Score.js","src/partials/Game.js","src/index.js"],"names":["SVG_NS","GAME_WIDTH","GAME_HEIGHT","PADDLE_WIDTH","PADDLE_HEIGHT","PADDLE_GAP","BALL_RADIUS","PADDLE_SPEED","KEYS","p1up","p1down","p2up","p2down","pause","Board","width","height","svg","boardSvg","document","createElementNS","setAttributeNS","appendChild","lineSvg","Paddle","boardHeight","x","y","keyUp","keyDown","speed","score","addEventListener","event","key","moveUp","moveDown","position","top","left","bottom","right","Math","max","min","paddleRect","Ball","radius","boardWidth","direction","pingSound","Audio","Ping","reset","vy","random","vx","abs","paddle1","paddle2","increaseScore","getPaddlePosition","hitRight","belowTop","aboveBottom","play","hitLeft","pongBall","ballMove","wallCollision","paddleCollision","Score","size","textSvg","textContent","Game","element","paused","gameElement","getElementById","board","paddle_mid","right_gap","score1","score2","setSpeed","innerHTML","getScore","style","color","render","game","gameLoop","requestAnimationFrame"],"mappings":"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","file":"src.1be2431b.js","sourceRoot":"..","sourcesContent":["export const SVG_NS = \"http://www.w3.org/2000/svg\";\nexport const GAME_WIDTH = 512;\nexport const GAME_HEIGHT = 256;\n\nexport const PADDLE_WIDTH = 8;\nexport const PADDLE_HEIGHT = 56;\nexport const PADDLE_GAP = 10;\nexport const BALL_RADIUS = 8;\nexport const PADDLE_SPEED = 30;\n\nexport const KEYS = {\n  p1up: 'w',\n  p1down: 's',\n  p2up: 'ArrowUp',\n  p2down: 'ArrowDown',\n  pause: ' ',\n}","import { SVG_NS } from '../settings';\n\nexport default class Board {\n  constructor(width, height) {\n    this.width = width;\n    this.height = height;\n  }\n  render(svg) {\n    const boardSvg = document.createElementNS(SVG_NS, \"rect\");\n    boardSvg.setAttributeNS(null, \"x\", 0);\n    boardSvg.setAttributeNS(null, \"y\", 0);\n    boardSvg.setAttributeNS(null, \"width\", this.width);\n    boardSvg.setAttributeNS(null, \"height\", this.height);\n    boardSvg.setAttributeNS(null, \"fill\", '#6156E8');\n    svg.appendChild(boardSvg);\n\n    const lineSvg = document.createElementNS(SVG_NS, \"line\");\n\n    lineSvg.setAttributeNS(null, \"x1\", this.width / 2);\n    lineSvg.setAttributeNS(null, \"x2\", this.width / 2);\n    lineSvg.setAttributeNS(null, \"y1\", 0);\n    lineSvg.setAttributeNS(null, \"y2\", this.height);\n    lineSvg.setAttributeNS(null, \"stroke\", \"#C0FF8B\");\n    lineSvg.setAttributeNS(null, \"stroke-width\", 4);\n    lineSvg.setAttributeNS(null, \"stroke-dasharray\", \"20 15\");\n    svg.appendChild(lineSvg);\n  }\n}","import { SVG_NS, PADDLE_SPEED } from '../settings'\n\nexport default class Paddle {\n  constructor(boardHeight, width, height, x, y, keyUp, keyDown) {\n    this.boardHeight = boardHeight;\n    this.width = width;\n    this.height = height;\n    this.x = x;\n    this.y = y;\n    this.speed = PADDLE_SPEED;\n    this.score = 0;\n\n    document.addEventListener(\"keydown\", event => {\n      switch (event.key) {\n        case keyUp:\n          this.moveUp();\n          break;\n        case keyDown:\n          this.moveDown();\n          break;\n      }\n    });\n  }\n\n  setSpeed(speed) {\n    this.speed = speed;\n  }\n\n  getScore() {\n    return this.score;\n  }\n\n  increaseScore() {\n    this.score = this.score + 1;\n  }\n\n  getPaddlePosition() {\n    const position = {\n      top: this.y,\n      left: this.x,\n      bottom: this.y + this.height,\n      right: this.x + this.width,\n    };\n    return position;\n  }\n\n  moveUp() {\n    this.y = Math.max(0, this.y - this.speed);\n  }\n\n  moveDown() {\n    this.y = Math.min((this.boardHeight - this.height), this.y + this.speed);\n  }\n\n  render(svg) {\n    let paddleRect = document.createElementNS(SVG_NS, \"rect\");\n    paddleRect.setAttributeNS(null, \"x\", this.x);\n    paddleRect.setAttributeNS(null, \"y\", this.y);\n    paddleRect.setAttributeNS(null, \"height\", this.height);\n    paddleRect.setAttributeNS(null, \"width\", this.width);\n    paddleRect.setAttributeNS(null, \"fill\", \"#EB9382\");\n    svg.appendChild(paddleRect);\n  }\n}","import { SVG_NS } from '../settings';\nimport Ping from \"../../public/sounds/pong-01.wav\";\n\n\nexport default class Ball {\n  constructor(radius, boardWidth, boardHeight) {\n    this.radius = radius;\n    this.boardWidth = boardWidth;\n    this.boardHeight = boardHeight;\n    this.x = this.boardWidth / 2;\n    this.y = this.boardHeight / 2;\n    this.direction = 1;\n    this.pingSound = new Audio(Ping);\n    this.reset();\n  }\n\n  reset() {\n    this.x = this.boardWidth / 2;\n    this.y = this.boardHeight / 2;\n    this.vy = 0;\n    while (this.vy === 0) {\n      this.vy = (Math.random() * 10) - 5;\n    }\n    this.vx = (6 - Math.abs(this.vy)) * this.direction;\n  }\n\n\n  wallCollision(paddle1, paddle2) {\n    // did the ball hit the top or the bottom walls?\n    if ((this.y + this.radius >= this.boardHeight) || (this.y - this.radius <= 0)) {\n      this.vy = this.vy * -1;\n    }\n\n    if (this.x - this.radius >= this.boardWidth) {\n      paddle1.increaseScore();\n      this.direction = -1;\n      this.reset();\n    } else if (this.x + this.radius <= 0) {\n      paddle2.increaseScore();\n      this.direction = 1;\n      this.reset();\n    }\n\n  }\n\n  paddleCollision(paddle1, paddle2) {\n    if (this.vx < 0) {\n      const position = paddle1.getPaddlePosition();\n      const hitRight = ((this.x - this.radius) <= position.right);\n      const belowTop = (this.y - this.radius >= position.top);\n      const aboveBottom = (this.y + this.radius <= position.bottom);\n      if (hitRight && belowTop && aboveBottom) {\n        this.pingSound.play();\n        this.vx = this.vx * -1;\n      }\n    } else {\n      const position = paddle2.getPaddlePosition();\n      const hitLeft = ((this.x + this.radius) >= position.left);\n      const belowTop = ((this.y - this.radius) >= position.top);\n      const aboveBottom = (this.y + this.radius) <= position.bottom;\n      if (hitLeft && belowTop && aboveBottom) {\n        this.pingSound.play();\n        this.vx = this.vx * -1;\n      }\n    }\n  }\n\n  ballMove() {\n    this.x = this.x + this.vx;\n    this.y = this.y + this.vy;\n  }\n\n  render(svg, paddle1, paddle2) {\n    let pongBall = document.createElementNS(SVG_NS, \"circle\");\n    pongBall.setAttributeNS(null, \"cx\", this.x);\n    pongBall.setAttributeNS(null, \"cy\", this.y);\n    pongBall.setAttributeNS(null, \"r\", this.radius);\n    pongBall.setAttributeNS(null, \"fill\", \"#C0FF8B\");\n    svg.appendChild(pongBall);\n    this.ballMove();\n    this.wallCollision(paddle1, paddle2);\n    this.paddleCollision(paddle1, paddle2);\n  }\n\n}","import { SVG_NS } from '../settings';\n\nexport default class Score {\n  constructor(x, y, size) {\n    this.x = x;\n    this.y = y;\n    this.size = size;\n  }\n\n  render(svg, score) {\n    const textSvg = document.createElementNS(SVG_NS, \"text\");\n    textSvg.setAttributeNS(null, \"x\", this.x);\n    textSvg.setAttributeNS(null, \"y\", this.y);\n    textSvg.setAttributeNS(null, \"font-size\", this.size);\n    textSvg.setAttributeNS(null, \"font-family\", \"'Silkscreen Web', monotype\");\n    textSvg.setAttributeNS(null, \"fill\", \"#EB9382\");\n    textSvg.textContent = score;\n    svg.appendChild(textSvg);\n  }\n}","import { SVG_NS, PADDLE_WIDTH, PADDLE_HEIGHT, PADDLE_GAP, BALL_RADIUS, KEYS, PADDLE_SPEED } from '../settings';\nimport Board from './Board';\nimport Paddle from './Paddle';\nimport Ball from './Ball';\nimport Score from './Score';\n\nexport default class Game {\n  constructor(element, width, height) {\n    this.element = element;\n    this.width = width;\n    this.height = height;\n    this.paused = false;\n    this.gameElement = document.getElementById(this.element);\n    this.board = new Board(this.width, this.height);\n\n    const paddle_mid = (this.height - PADDLE_HEIGHT) / 2;\n    const right_gap = this.width - PADDLE_GAP - PADDLE_WIDTH;\n    this.paddle1 = new Paddle(this.height, PADDLE_WIDTH, PADDLE_HEIGHT, PADDLE_GAP, paddle_mid, KEYS.p1up, KEYS.p1down);\n    this.paddle2 = new Paddle(this.height, PADDLE_WIDTH, PADDLE_HEIGHT, right_gap, paddle_mid, KEYS.p2up, KEYS.p2down);\n    this.pongBall = new Ball(BALL_RADIUS, this.width, this.height);\n    this.score1 = new Score(this.width / 2 - 50, 30, 30, 30);\n    this.score2 = new Score(this.width / 2 + 25, 30, 30, 30);\n    // Other code goes here...\n    document.addEventListener(\"keydown\", event => {\n      if (event.key === \" \") {\n        this.paused = !this.paused;\n        if (this.paused === true) {\n          this.paddle1.setSpeed(0);\n          this.paddle2.setSpeed(0);\n        } else {\n          this.paddle1.setSpeed(PADDLE_SPEED);\n          this.paddle2.setSpeed(PADDLE_SPEED);\n        }\n      }\n    });\n\n  }\n\n  render() {\n    // More code goes here....\n    if (this.paused === false) {\n      this.gameElement.innerHTML = '';\n      let svg = document.createElementNS(SVG_NS, \"svg\");\n      svg.setAttributeNS(null, \"width\", this.width);\n      svg.setAttributeNS(null, \"height\", this.height);\n      svg.setAttributeNS(null, \"viewBox\", `0 0 ${this.width} ${this.height}`);\n      this.gameElement.appendChild(svg);\n\n      if (this.paddle1.getScore() === 5) {\n        this.paddle1.height = PADDLE_HEIGHT / 2;\n      } else if (this.paddle2.getScore() === 5) {\n        this.paddle2.height = PADDLE_HEIGHT / 2;\n      }\n\n      if (this.paddle1.getScore() === 10) {\n        this.gameElement.innerHTML = \"Player 1 Wins!\";\n        this.gameElement.style.color = \"#FF5863\";\n      } else if (this.paddle2.getScore() === 10) {\n        this.gameElement.innerHTML = \"Player 2 Wins!\";\n        this.gameElement.style.color = \"#7057FF\";\n      }\n\n      if (this.paddle1.getScore() === 10 || this.paddle2.getScore() === 10) {\n        this.paused = !this.paused;\n        if (this.paused === true) {\n          this.paddle1.setSpeed(0);\n          this.paddle2.setSpeed(0);\n        }\n      }\n\n      this.board.render(svg);\n      this.paddle1.render(svg);\n      this.paddle2.render(svg);\n      this.pongBall.render(svg, this.paddle1, this.paddle2);\n      this.score1.render(svg, this.paddle1.getScore());\n      this.score2.render(svg, this.paddle2.getScore());\n\n    }\n  }\n}\n","import './styles/game.css';\nimport Game from './partials/Game';\nimport { GAME_WIDTH, GAME_HEIGHT } from './settings';\n\nconst game = new Game('game', GAME_WIDTH, GAME_HEIGHT);\n\n(function gameLoop() {\n  game.render();\n  requestAnimationFrame(gameLoop);\n})();\n"]}